// +build !ignore_autogenerated

/*

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataMetrics) DeepCopyInto(out *DataMetrics) {
	*out = *in
	if in.TableEstimatedSize != nil {
		in, out := &in.TableEstimatedSize, &out.TableEstimatedSize
		*out = new([]TableReference)
		if **in != nil {
			in, out := *in, *out
			*out = make([]TableReference, len(*in))
			copy(*out, *in)
		}
	}
	if in.TableNextID != nil {
		in, out := &in.TableNextID, &out.TableNextID
		*out = new([]TableReference)
		if **in != nil {
			in, out := *in, *out
			*out = make([]TableReference, len(*in))
			copy(*out, *in)
		}
	}
	if in.SQLQuery != nil {
		in, out := &in.SQLQuery, &out.SQLQuery
		*out = new([]SQLQueryMetric)
		if **in != nil {
			in, out := *in, *out
			*out = make([]SQLQueryMetric, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataMetrics.
func (in *DataMetrics) DeepCopy() *DataMetrics {
	if in == nil {
		return nil
	}
	out := new(DataMetrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseConnectionInfo) DeepCopyInto(out *DatabaseConnectionInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseConnectionInfo.
func (in *DatabaseConnectionInfo) DeepCopy() *DatabaseConnectionInfo {
	if in == nil {
		return nil
	}
	out := new(DatabaseConnectionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigration) DeepCopyInto(out *DatabaseMigration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigration.
func (in *DatabaseMigration) DeepCopy() *DatabaseMigration {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseMigration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigrationList) DeepCopyInto(out *DatabaseMigrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DatabaseMigration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigrationList.
func (in *DatabaseMigrationList) DeepCopy() *DatabaseMigrationList {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatabaseMigrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigrationSchemaHint) DeepCopyInto(out *DatabaseMigrationSchemaHint) {
	*out = *in
	out.TableReference = in.TableReference
	if in.Columns != nil {
		in, out := &in.Columns, &out.Columns
		*out = make([]DatabaseMigrationSchemaHintColumn, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigrationSchemaHint.
func (in *DatabaseMigrationSchemaHint) DeepCopy() *DatabaseMigrationSchemaHint {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigrationSchemaHint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigrationSchemaHintColumn) DeepCopyInto(out *DatabaseMigrationSchemaHintColumn) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigrationSchemaHintColumn.
func (in *DatabaseMigrationSchemaHintColumn) DeepCopy() *DatabaseMigrationSchemaHintColumn {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigrationSchemaHintColumn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigrationSpec) DeepCopyInto(out *DatabaseMigrationSpec) {
	*out = *in
	in.MigrationContainerSpec.DeepCopyInto(&out.MigrationContainerSpec)
	if in.SchemaHints != nil {
		in, out := &in.SchemaHints, &out.SchemaHints
		*out = make([]DatabaseMigrationSchemaHint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigrationSpec.
func (in *DatabaseMigrationSpec) DeepCopy() *DatabaseMigrationSpec {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatabaseMigrationStatus) DeepCopyInto(out *DatabaseMigrationStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatabaseMigrationStatus.
func (in *DatabaseMigrationStatus) DeepCopy() *DatabaseMigrationStatus {
	if in == nil {
		return nil
	}
	out := new(DatabaseMigrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedDatabase) DeepCopyInto(out *ManagedDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedDatabase.
func (in *ManagedDatabase) DeepCopy() *ManagedDatabase {
	if in == nil {
		return nil
	}
	out := new(ManagedDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedDatabaseError) DeepCopyInto(out *ManagedDatabaseError) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedDatabaseError.
func (in *ManagedDatabaseError) DeepCopy() *ManagedDatabaseError {
	if in == nil {
		return nil
	}
	out := new(ManagedDatabaseError)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedDatabaseList) DeepCopyInto(out *ManagedDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedDatabaseList.
func (in *ManagedDatabaseList) DeepCopy() *ManagedDatabaseList {
	if in == nil {
		return nil
	}
	out := new(ManagedDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedDatabaseSpec) DeepCopyInto(out *ManagedDatabaseSpec) {
	*out = *in
	out.Connection = in.Connection
	if in.MigrationContainerConfig != nil {
		in, out := &in.MigrationContainerConfig, &out.MigrationContainerConfig
		*out = new(MigrationContainerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.ExportDataMetrics != nil {
		in, out := &in.ExportDataMetrics, &out.ExportDataMetrics
		*out = new(DataMetrics)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedDatabaseSpec.
func (in *ManagedDatabaseSpec) DeepCopy() *ManagedDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedDatabaseStatus) DeepCopyInto(out *ManagedDatabaseStatus) {
	*out = *in
	if in.Errors != nil {
		in, out := &in.Errors, &out.Errors
		*out = make([]ManagedDatabaseError, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedDatabaseStatus.
func (in *ManagedDatabaseStatus) DeepCopy() *ManagedDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrationContainerConfig) DeepCopyInto(out *MigrationContainerConfig) {
	*out = *in
	in.VolumeMount.DeepCopyInto(&out.VolumeMount)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrationContainerConfig.
func (in *MigrationContainerConfig) DeepCopy() *MigrationContainerConfig {
	if in == nil {
		return nil
	}
	out := new(MigrationContainerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrometheusMetricExporter) DeepCopyInto(out *PrometheusMetricExporter) {
	*out = *in
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrometheusMetricExporter.
func (in *PrometheusMetricExporter) DeepCopy() *PrometheusMetricExporter {
	if in == nil {
		return nil
	}
	out := new(PrometheusMetricExporter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SQLQueryMetric) DeepCopyInto(out *SQLQueryMetric) {
	*out = *in
	in.PrometheusMetric.DeepCopyInto(&out.PrometheusMetric)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SQLQueryMetric.
func (in *SQLQueryMetric) DeepCopy() *SQLQueryMetric {
	if in == nil {
		return nil
	}
	out := new(SQLQueryMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableReference) DeepCopyInto(out *TableReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableReference.
func (in *TableReference) DeepCopy() *TableReference {
	if in == nil {
		return nil
	}
	out := new(TableReference)
	in.DeepCopyInto(out)
	return out
}
